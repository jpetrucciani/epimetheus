name: publish artifacts

on:
  release:
    types: [published]

jobs:
  publish_docker_image:
    name: publish docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: |
            ghcr.io/${{ github.repository }}

      - id: push
        uses: docker/build-push-action@v6.5.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  build_binaries:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-24.04
            target: x86_64-unknown-linux-musl
            bin: epimetheus
            name: epimetheus-Linux-x86_64-musl.tar.gz
          - os_name: Linux-aarch64
            os: ubuntu-24.04
            target: aarch64-unknown-linux-musl
            bin: epimetheus
            name: epimetheus-Linux-aarch64-musl.tar.gz
          - os_name: Linux-arm
            os: ubuntu-24.04
            target: arm-unknown-linux-musleabi
            bin: epimetheus
            name: epimetheus-Linux-arm-musl.tar.gz
          - os_name: Windows-aarch64
            os: windows-latest
            target: aarch64-pc-windows-msvc
            bin: epimetheus.exe
            name: epimetheus-Windows-aarch64.zip
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: epimetheus.exe
            name: epimetheus-Windows-x86_64.zip
          - os_name: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: epimetheus
            name: epimetheus-Darwin-aarch64.tar.gz
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
        if: contains(matrix.platform.name, 'musl')
      - run: sudo apt-get update --yes && sudo apt-get install --yes openssl pkg-config
        if: contains(matrix.platform.name, 'Linux')
      - uses: houseabsolute/actions-rust-cross@v0
        with:
          command: 'build'
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: '--locked --release'
          strip: true
      - shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          fi
          cd -
        if: |
          matrix.toolchain == 'stable' && startsWith( github.ref, 'refs/tags/' )
      - uses: actions/upload-artifact@v4
        with:
          name: epimetheus-${{ matrix.platform.os_name }}
          path: 'epimetheus-*'
        if: matrix.toolchain == 'stable'
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} ${{ matrix.platform.name }}
        if: matrix.toolchain == 'stable'
      - run: shasum -a 256 ${{ matrix.platform.name }}
        if: |
          matrix.toolchain == 'stable' && matrix.platform.os == 'macOS-latest' && startsWith( github.ref, 'refs/tags/' )
